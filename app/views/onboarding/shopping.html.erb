<div class="w-full max-w-[430px] sm:max-w-sm md:max-w-md lg:max-w-lg xl:max-w-xl 2xl:max-w-2xl mx-auto bg-fp-body-bg flex flex-col min-h-screen shadow-xl p-6">
  <header class="pt-10 pb-6">
    <%= link_to onboarding_timeprep_path, class: "text-fp-accent-blue hover:text-fp-accent-blue-dark inline-flex items-center" do %>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
      </svg>
      Back
    <% end %>
    <h1 class="font-display text-3xl text-fp-neutral-darkest text-shadow-dark text-center mt-4">Shopping Setup</h1>
  </header>

  <%= form_with model: @profile, url: onboarding_avatar_path, method: :post, class: "flex-grow space-y-6 overflow-y-auto" do |f| %>
    <p class="text-fp-neutral-text text-center text-sm">Let's optimize your grocery runs!</p>

    <div>
      <%= f.label :shopping_difficulty, "Shopping Difficulty Preference:", class: "block font-sans text-sm font-medium text-fp-neutral-darkest mb-1" %>
      <%= f.select :shopping_difficulty,
        options_for_select([
          ["Most Convenient (fewer stores, maybe slightly pricier)", "convenient"],
          ["Cheapest (might involve multiple stores)", "cheapest"],
          ["Balanced (good mix of price and convenience)", "balanced"]
        ], "cheapest"),
        {},
        class: "block w-full p-3 rounded-fp border border-fp-neutral-medium bg-fp-white shadow-sm focus:border-fp-primary-green focus:ring-1 focus:ring-fp-primary-green"
      %>
    </div>

    <div>
      <%= f.label :weekly_budget, "Estimated Weekly Grocery Budget:", class: "block font-sans text-sm font-medium text-fp-neutral-darkest mb-1" %>
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <span class="text-fp-neutral-text-light sm:text-sm">$</span>
        </div>
        <%= f.number_field :weekly_budget,
          placeholder: "e.g., 75",
          min: 15,
          class: "block w-full p-3 pl-7 pr-12 rounded-fp border border-fp-neutral-medium bg-fp-white shadow-sm focus:border-fp-primary-green focus:ring-1 focus:ring-fp-primary-green"
        %>
        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
          <span class="text-fp-neutral-text-light sm:text-sm">USD</span>
        </div>
      </div>
      <div id="budget-error" class="text-red-600 text-xs mt-1 hidden">Budget must be $15 or more.</div>
      <div class="flex items-center justify-between mt-3">
        <%= f.label :budget_flexible, class: "text-sm text-fp-neutral-darkest flex items-center" do %>
          Flexible Budget?
          <span class="tooltip-container">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 tooltip-icon">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z" clip-rule="evenodd" />
            </svg>
            <span class="tooltip-text">We'll try to fit the menu within your budget. Enabling flexible may mean we go a few dollars over/under for better options.</span>
          </span>
        <% end %>
        <label class="toggle-switch">
          <%= f.check_box :budget_flexible, checked: true %>
          <span class="slider"></span>
        </label>
      </div>
    </div>

    <div>
      <p class="block font-sans text-sm font-medium text-fp-neutral-darkest mb-2">Location for Price Estimates:</p>
      <div class="space-y-4">
        <% location_options = [
          {
            id: "location-auto",
            value: "auto",
            title: "Use My Current Location (Recommended)",
            description: "Allows scanning nearby stores for best prices. We'll ask for permission."
          },
          {
            id: "location-region",
            value: "region",
            title: "Set General Region/Zip Code",
            description: "Provides general price estimates. Less accurate for local deals."
          }
        ] %>

        <% location_options.each do |option| %>
          <div class="radio-card">
            <%= f.radio_button :location_type,
              option[:value],
              id: option[:id],
              class: "sr-only"
            %>
            <%= f.label :location_type,
              class: "block p-3 bg-fp-white rounded-fp border-2 border-fp-neutral-medium hover:border-fp-primary-green cursor-pointer",
              value: option[:value]
            do %>
              <h3 class="font-semibold text-fp-neutral-darkest text-sm"><%= option[:title] %></h3>
              <p class="text-xs text-fp-neutral-text-light"><%= option[:description] %></p>
            <% end %>
          </div>
        <% end %>

        <%= f.text_field :region_zip,
          placeholder: "Enter Zip Code or Region",
          class: "hidden mt-2 w-full p-3 rounded-fp border border-fp-neutral-medium bg-fp-white shadow-sm focus:border-fp-primary-green focus:ring-1 focus:ring-fp-primary-green"
        %>
      </div>
    </div>

    <footer class="pt-8 pb-6">
      <%= f.submit "Next", class: "w-full text-center block font-semibold py-3 px-6 rounded-fp bg-fp-primary-green text-fp-white shadow-fp-cta hover:bg-fp-primary-green-dark" %>
    </footer>
  <% end %>
</div>

<% content_for :javascript do %>
  <script>
    const locationRadios = document.querySelectorAll('input[name="location_type"]');
    const regionInput = document.getElementById('region-input');
    let currentlyCheckedId = null;

    locationRadios.forEach(radio => {
      radio.addEventListener('click', function() {
        if (this.id === currentlyCheckedId && this.checked) {
          this.checked = false;
          currentlyCheckedId = null;
        } else if (this.checked) {
          currentlyCheckedId = this.id;
        } else {
          if (this.id === currentlyCheckedId) {
            currentlyCheckedId = null;
          }
        }

        const regionRadio = document.getElementById('location-region');
        if (regionRadio.checked) {
          regionInput.classList.remove('hidden');
          if (this.id === 'location-region') {
            regionInput.focus();
          }
        } else {
          regionInput.classList.add('hidden');
        }
      });
    });

    const weeklyBudgetInput = document.getElementById('weekly-budget');
    const budgetError = document.getElementById('budget-error');
    const nextButton = document.getElementById('next-button');

    function validateBudget() {
      const rawValueTrimmed = weeklyBudgetInput.value.trim();
      const value = parseFloat(weeklyBudgetInput.value);

      let isValid = true;
      let message = "";

      if (rawValueTrimmed === "") {
        budgetError.classList.add('hidden');
        weeklyBudgetInput.classList.remove('border-red-500', 'focus:border-red-500', 'focus:ring-red-500');
        weeklyBudgetInput.classList.add('border-fp-neutral-medium', 'focus:border-fp-primary-green', 'focus:ring-fp-primary-green');
        return true;
      } else if (isNaN(value)) {
        isValid = false;
        message = "Please enter a valid number for the budget.";
      } else if (value < 15) {
        isValid = false;
        message = "Budget must be at least $15 if specified.";
      }

      if (!isValid) {
        budgetError.textContent = message;
        budgetError.classList.remove('hidden');

        weeklyBudgetInput.classList.remove('border-fp-neutral-medium', 'focus:border-fp-primary-green', 'focus:ring-fp-primary-green');
        weeklyBudgetInput.classList.add('border-red-500', 'focus:border-red-500', 'focus:ring-red-500');
        return false;
      } else {
        budgetError.classList.add('hidden');
        weeklyBudgetInput.classList.remove('border-red-500', 'focus:border-red-500', 'focus:ring-red-500');
        weeklyBudgetInput.classList.add('border-fp-neutral-medium', 'focus:border-fp-primary-green', 'focus:ring-fp-primary-green');
        return true;
      }
    }

    if (weeklyBudgetInput) {
      weeklyBudgetInput.addEventListener('input', validateBudget);
      weeklyBudgetInput.addEventListener('blur', () => {
        if(weeklyBudgetInput.value.trim() !== "") {
          validateBudget();
        } else {
          budgetError.classList.add('hidden');
          weeklyBudgetInput.classList.remove('border-red-500', 'focus:border-red-500', 'focus:ring-red-500');
          weeklyBudgetInput.classList.add('border-fp-neutral-medium', 'focus:border-fp-primary-green', 'focus:ring-fp-primary-green');
        }
      });
    }

    if (nextButton) {
      nextButton.addEventListener('click', function(event) {
        if (!validateBudget()) {
          event.preventDefault();
          weeklyBudgetInput.focus();
        }
      });
    }
  </script>
<% end %>
