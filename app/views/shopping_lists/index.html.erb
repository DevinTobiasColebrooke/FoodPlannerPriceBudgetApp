<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Food Planner - Shopping</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&family=Satisfy&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Poppins', sans-serif; color: #111827; }
        .font-display-prototype { font-family: 'Satisfy', cursive; }
        .main-shopping-area { flex-grow: 1; overflow-y: auto; padding: 1rem; }

        /* Store Card */
        .store-card { transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out; }
        .store-card:hover { transform: translateY(-2px); box-shadow: 0 6px 12px rgba(0,0,0,0.1); }
        .store-card.selected-store { border-color: #5AD479; box-shadow: 0 0 0 3px rgba(90, 212, 121, 0.5); }


        /* Modal for Shopping List */
        .modal-overlay { position: fixed; inset: 0; background-color: rgba(50,50,50,0.6); display: flex; align-items: flex-end; justify-content: center; z-index: 50; opacity: 0; visibility: hidden; transition: opacity 0.3s ease, visibility 0.3s ease; }
        .modal-overlay.open { opacity: 1; visibility: visible; }
        .modal-content { background-color: #FBFDF8; width: 100%; max-width: 430px; max-height: 80vh; border-top-left-radius: 1rem; border-top-right-radius: 1rem; box-shadow: 0 -4px 20px rgba(0,0,0,0.2); display: flex; flex-direction: column; transform: translateY(100%); transition: transform 0.3s ease-out; }
        .modal-overlay.open .modal-content { transform: translateY(0); }
        .modal-header { padding: 1rem; border-bottom: 1px solid #D1D5DB; display: flex; justify-content: space-between; align-items: center; }
        .modal-body { padding: 1rem; overflow-y: auto; flex-grow: 1; }
        .modal-footer { padding: 1rem; border-top: 1px solid #D1D5DB; display: flex; justify-content: flex-end; gap: 0.5rem; }
        .shopping-list-item { display: flex; justify-content: space-between; align-items: center; padding: 0.5rem 0; border-bottom: 1px solid #e5e7eb; }
        .shopping-list-item:last-child { border-bottom: none; }
        .form-checkbox-custom { appearance: none; width: 1.25rem; height: 1.25rem; border: 2px solid #D1D5DB; border-radius: 0.25rem; display: inline-block; vertical-align: middle; position: relative; cursor: pointer; flex-shrink: 0; }
        .form-checkbox-custom:checked { background-color: #5AD479; border-color: #5AD479; }
        .form-checkbox-custom:checked::after { content: '✓'; font-size: 0.9rem; color: white; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); }

    </style>
</head>
<body class="bg-gray-100">
    <div class="w-full max-w-[430px] sm:max-w-sm md:max-w-md lg:max-w-lg xl:max-w-xl 2xl:max-w-2xl mx-auto bg-fp-body-bg flex flex-col min-h-screen shadow-xl">
        <!-- Header Area -->
        <header class="p-5 bg-fp-neutral-lightest shadow-sm flex justify-between items-center sticky top-0 z-20">
            <h1 class="font-display-prototype text-2xl text-fp-neutral-darkest">Shopping Trip</h1>
            <button id="openShoppingListBtn" class="font-semibold py-2 px-4 rounded-fp bg-fp-primary-green text-fp-white shadow-fp-cta hover:bg-fp-primary-green-dark text-sm inline-flex items-center gap-1.5">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 10h16M4 14h16M4 18h16" /></svg>
                List
            </button>
        </header>

        <main class="main-shopping-area">
            <!-- Location Context & Change -->
            <div class="mb-4 p-3 bg-fp-white rounded-fp shadow-fp-card">
                <div class="flex justify-between items-center">
                    <p class="text-xs text-fp-neutral-text-light">Prices for: <strong class="text-fp-neutral-text"><%= @user_location %></strong></p>
                    <%= link_to "Change Location", edit_settings_path, class: "text-xs text-fp-accent-blue hover:underline" %>
                </div>
            </div>

            <!-- Summary Stats -->
            <div class="mb-4 p-3 bg-fp-white rounded-fp shadow-fp-card space-y-2">
                <div class="flex justify-between items-center text-sm">
                    <span class="text-fp-neutral-text-light">Overall Progress:</span>
                    <span class="font-semibold text-fp-primary-green" id="overallProgressText">
                        <%= @shopping_list.shopping_list_items.checked.count %> of <%= @shopping_list.shopping_list_items.count %> items
                    </span>
                </div>
                <div class="progress-bar-bg h-2.5">
                    <div class="progress-bar-fill" id="overallProgressBar" style="width: <%= @shopping_list.shopping_list_items.count.zero? ? 0 : (@shopping_list.shopping_list_items.checked.count.to_f / @shopping_list.shopping_list_items.count * 100).round %>%"></div>
                </div>
                <div class="flex justify-between items-center text-sm pt-1">
                    <span class="text-fp-neutral-text-light">Est. Total Cost:</span>
                    <span class="font-semibold text-fp-neutral-darkest" id="overallCostText">$<%= number_with_precision(@shopping_list.estimated_total_cost, precision: 2) %></span>
                </div>
            </div>

            <!-- Sort/Filter Options -->
            <div class="mb-4 flex items-center overflow-x-auto whitespace-nowrap gap-1.5 sm:flex-wrap sm:gap-2 sm:overflow-visible sm:whitespace-normal">
                <span class="text-xs text-fp-neutral-text-light flex-shrink-0 sm:flex-shrink">Sort by:</span>
                <%= link_to "Distance", shopping_lists_path(sort: 'distance'), class: "text-xs py-0.5 px-2 rounded-full #{params[:sort] == 'distance' ? 'bg-fp-primary-green text-white' : 'bg-fp-neutral-light border border-fp-neutral-medium hover:bg-fp-neutral-medium text-fp-neutral-darkest'} flex-shrink-0 sm:py-1 sm:px-2.5 sm:flex-shrink" %>
                <%= link_to "Price", shopping_lists_path(sort: 'price'), class: "text-xs py-0.5 px-2 rounded-full #{params[:sort] == 'price' ? 'bg-fp-primary-green text-white' : 'bg-fp-neutral-light border border-fp-neutral-medium hover:bg-fp-neutral-medium text-fp-neutral-darkest'} flex-shrink-0 sm:py-1 sm:px-2.5 sm:flex-shrink" %>
                <%= link_to "Best Match", shopping_lists_path(sort: 'best_match'), class: "text-xs py-0.5 px-2 rounded-full #{params[:sort] == 'best_match' ? 'bg-fp-primary-green text-white' : 'bg-fp-neutral-light border border-fp-neutral-medium hover:bg-fp-neutral-medium text-fp-neutral-darkest'} flex-shrink-0 sm:py-1 sm:px-2.5 sm:flex-shrink" %>
            </div>

            <!-- Store Cards -->
            <div class="space-y-3">
                <% @stores.each do |store| %>
                    <div class="store-card bg-fp-white rounded-fp shadow-fp-card p-3 border-2 border-transparent cursor-pointer" data-store-id="<%= store.id %>" onclick="selectStore(this, '<%= store.id %>')">
                        <div class="flex items-start gap-3">
                            <% if store.logo_url.present? %>
                                <%= image_tag store.logo_url, alt: "#{store.name} Logo", class: "w-10 h-10 object-contain bg-fp-neutral-lightest p-1 rounded" %>
                            <% else %>
                                <div class="w-10 h-10 bg-fp-neutral-lightest p-1 rounded flex items-center justify-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-fp-neutral-medium" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" /></svg>
                                </div>
                            <% end %>
                            <div class="flex-1">
                                <div class="flex justify-between items-start">
                                    <h3 class="font-semibold text-fp-neutral-darkest text-base leading-tight"><%= store.name %></h3>
                                    <% if store.store_type == 'online' %>
                                        <span class="text-xs font-medium py-0.5 px-1.5 rounded-full bg-fp-accent-blue text-white">Online Only</span>
                                    <% end %>
                                </div>
                                <p class="text-xs text-fp-neutral-text-light">
                                    <%= store.address %>, <%= store.zip_code %> • <%= store.opening_hours %>
                                </p>
                            </div>
                        </div>
                        <div class="mt-2 pt-2 border-t border-fp-neutral-medium space-y-1">
                            <div class="flex justify-between items-center text-xs">
                                <span class="text-fp-primary-green font-medium">All items available</span>
                                <span class="text-fp-neutral-darkest font-semibold">Est: $<%= number_with_precision(store.estimated_total_cost(@shopping_list), precision: 2) %></span>
                            </div>
                            <div class="flex items-center gap-1 text-xs text-fp-neutral-text-light">
                                <% if store.store_type == 'online' %>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 text-fp-accent-blue" viewBox="0 0 20 20" fill="currentColor"><path d="M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z" /></svg>
                                    <span>Online Delivery</span>
                                <% else %>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 text-fp-primary-green" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd" /></svg>
                                    <span>In-Store Shopping</span>
                                <% end %>
                            </div>
                        </div>
                    </div>
                <% end %>
            </div>
        </main>

        <!-- Shopping List Modal -->
        <div id="shoppingListModal" class="modal-overlay">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="text-lg font-semibold text-fp-neutral-darkest">My Shopping List</h2>
                    <button id="closeShoppingListModal" class="text-fp-neutral-text-light hover:text-fp-neutral-darkest">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" /></svg>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <%= form_with(model: [@shopping_list, ShoppingListItem.new], class: "w-full") do |f| %>
                            <%= f.text_field :custom_item_name, placeholder: "Add item to list...", class: "w-full p-2.5 rounded-fp border border-fp-neutral-medium focus:border-fp-primary-green focus:ring-1 focus:ring-fp-primary-green text-sm" %>
                        <% end %>
                    </div>
                    <div id="shopping-list-items-container" class="space-y-1">
                        <%= render partial: "shopping_list_items/item", collection: @shopping_list.shopping_list_items %>
                    </div>
                </div>
                <div class="modal-footer">
                    <%= button_to "Clear Checked", clear_checked_shopping_list_path(@shopping_list), method: :post, class: "text-xs text-fp-neutral-text-light hover:underline" %>
                    <%= button_to "Update List", shopping_list_path(@shopping_list), method: :patch, class: "action-button bg-fp-primary-green text-white hover:bg-fp-primary-green-dark text-sm" %>
                </div>
            </div>
        </div>
    </div>

    <%= javascript_tag do %>
        document.addEventListener('DOMContentLoaded', function() {
            const openShoppingListBtn = document.getElementById('openShoppingListBtn');
            const closeShoppingListModalBtn = document.getElementById('closeShoppingListModal');
            const shoppingListModal = document.getElementById('shoppingListModal');

            openShoppingListBtn.addEventListener('click', () => shoppingListModal.classList.add('open'));
            closeShoppingListModalBtn.addEventListener('click', () => shoppingListModal.classList.remove('open'));

            shoppingListModal.addEventListener('click', function(event) {
                if (event.target === shoppingListModal) {
                    shoppingListModal.classList.remove('open');
                }
            });

            let selectedStoreElement = document.querySelector('.store-card.selected-store');

            function selectStore(storeElement, storeId) {
                if (selectedStoreElement) {
                    selectedStoreElement.classList.remove('selected-store');
                }
                storeElement.classList.add('selected-store');
                selectedStoreElement = storeElement;

                // Update UI based on store selection
                fetch(`/stores/${storeId}/availability`)
                    .then(response => response.json())
                    .then(data => {
                        updateStoreAvailability(data);
                    });
            }

            function updateStoreAvailability(data) {
                const overallProgressText = document.getElementById('overallProgressText');
                const overallProgressBar = document.getElementById('overallProgressBar');
                const overallCostText = document.getElementById('overallCostText');

                overallProgressText.textContent = data.progress_text;
                overallProgressBar.style.width = data.progress_percentage + '%';
                overallCostText.textContent = '$' + data.estimated_cost;
            }

            // Initial call if a store is pre-selected
            if(selectedStoreElement) {
                selectStore(selectedStoreElement, selectedStoreElement.dataset.storeId);
            }
        });
    <% end %>
</body>
</html>
